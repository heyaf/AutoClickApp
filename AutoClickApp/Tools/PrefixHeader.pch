//
//  PrefixHeader.pch
//  AutoClickApp
//
//  Created by 贺亚飞 on 2023/10/27.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch
#import "UIColor+ACColor.h"
#import "UIFont+ACFont.h"
#import "UIView+ACFrame.h"
#import "UIView+ACShortCreat.h"
#import "UIView+ACViewStyle.h"
#import <Masonry/Masonry.h>
#import <TZImagePickerController/TZImagePickerController.h>
#import <MBProgressHUD_JDragon/MBProgressHUD+JDragon.h>
#import "NSDictionary+SafeData.h"
#import "UIButton+admEdgeInsets.h"
#import "playVolume.h"
#import "UIButton+animation.h"
#import "AutoClickApp-Swift.h"
#import "vipTool.h"
#import <StoreKit/StoreKit.h>
#import "AppDelegate.h"
//在App Store Connect中创建内购项目的product_id
#define IAP1_ProductID @"AutoClicker_Month_Nofree"
#define IAP2_ProductID @"AutoClicker_Year_Nofree"

#define kScreenW [UIScreen mainScreen].bounds.size.width
#define kScreenH  [UIScreen mainScreen].bounds.size.height

#define kISiPhone ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
#define kScreenMaxLength (MAX(kScreenW, kScreenH))
#define kScreenMinLength (MIN(kScreenW, kScreenH))
#define kISiPhone5 (kISiPhone && kScreenMaxLength == 568.0)
#define kISiPhone6 (kISiPhone && kScreenMaxLength == 667.0)
#define kISiPhone6P (kISiPhone && kScreenMaxLength == 736.0)
#define kISiPhoneX (kISiPhone && kScreenMaxLength == 812.0)
#define kISiPhoneXr (kISiPhone && kScreenMaxLength == 896.0)
#define kISiPhoneXX (kISiPhone && kScreenMaxLength > 810.0)
#define IOS8 ([[[UIDevice currentDevice] systemVersion] doubleValue] >= 8.0)
#define iOS7 ([[UIDevice currentDevice].systemVersion doubleValue] >= 7.0)

#define kScale_W(w) ((kScreenW)/375.0) * (w)
#define kScale_H(h) (kScreenH/812.0) * (h)
//字体适配
#define kScaleFont(fontSize) [UIFont systemFontOfSize: fontSize*kScreenW/375.0]
#define AdaptedFrame(r)     ((CGFloat)(r * (kScreenW < kScreenH ? kScreenW : kScreenH ) / 375.0 ))

//状态栏高度
#define kStatusBarHeight (kISiPhoneXX?44:20)
//tabbar栏高度
#define kTabBarHeight (kStatusBarHeight > 20 ? 83 : 49)
//导航栏高度
#define kNavBarHeight (kStatusBarHeight + 44)
//安全区高度
#define kSafeAreaBottom (kISiPhoneXX ? 34 : 0)

#define kBoldFont(x) [UIFont fontWithName:@"PingFang-SC-Medium" size:x]
#define kSemiboldFont(x) [UIFont systemFontOfSize:x weight:UIFontWeightSemibold]
#define kFont(x) [UIFont systemFontOfSize:x]
#define KDinFont(x) [UIFont fontWithName:@"DIN" size:x]
#define kMediunFont(x)      [UIFont fontWithName:@"PingFang-SC-Medium" size:x]
#define kNormalFont(x) [UIFont fontWithName:@"PingFang SC" size:x]
#define Nav_Back_Font_M kBoldFont(18)
//RGB格式
#define kRGB(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]
//RGBA格式
#define kRGBA(r, g, b, a) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:a]
//随机颜色
#define kRandomColor [UIColor colorWithRed:arc4random_uniform(256)/255.0 green:arc4random_uniform(256)/255.0 blue:arc4random_uniform(256)/255.0 alpha:1.0]
#pragma mark -基础颜色
/*白色*/
#define kWhiteColor [UIColor whiteColor]
/*蓝色*/
#define kBlueColor [UIColor blueColor]
/*黑色*/
#define kBlackColor [UIColor blackColor]
/*红色*/
#define kRedColor [UIColor redColor]
/*绿色*/
#define kGreenColor [UIColor greenColor]
#define kGrayColor [UIColor grayColor]
#define kGray2Color [UIColor lightGrayColor]
#define kClearColor [UIColor clearColor]

#define kMainColor [UIColor colorWithHexString:@"#FF6633"]//FF6A00
#define KTagColor kMainColor
#define kMainGrayColor [UIColor colorWithHexString:@"#575859"]
#define kMainLightGrayColor [UIColor colorWithHexString:@"#858687"]
#define kMainBlackColor [UIColor colorWithHexString:@"#222222"]
#define k333BlackColor [UIColor colorWithHexString:@"#333333"]
#define kSeperatorColor [UIColor colorWithHexString:@"#E5E5E5"]
#define kplaceholderColor [UIColor colorWithHexString:@"#E9E9E9"]
#define kGrayTextColor [UIColor colorWithHexString:@"#666666"]
#define kF9Color [UIColor colorWithHexString:@"#F9F9F9"]
#define kF2Color [UIColor colorWithHexString:@"#F2F2F2"]
#define k999Color [UIColor colorWithHexString:@"#999999"]
#define kBackgroundColor [UIColor colorWithHexString:@"#F5F5F5"]
#define kMainRedColor [UIColor colorWithHexString:@"#EE0A24"]
#define kGrayBackgroundColor [UIColor colorWithHexString:@"#F8F9F9"]
#define kPriceColor [UIColor colorWithHexString:@"#FF4B33"]
 
#define LazyMutableArray(_array) \
return !(_array) ? (_array) = [NSMutableArray array] : (_array);

//APP对象 （单例对象）
#define kApplication [UIApplication sharedApplication]
#define kAppDelegate (AppDelegate *)kApplication.delegate
//主窗口 （keyWindow）
#define kKeyWindow [UIApplication sharedApplication].keyWindow
//NSUserDefaults实例化
#define kUserDefaults [NSUserDefaults standardUserDefaults]
//通知中心 （单例对象）
#define kNotificationCenter [NSNotificationCenter defaultCenter]
//发送通知
#define KPostNotification(name,obj,info) [[NSNotificationCenter defaultCenter]postNotificationName:name object:obj userInfo:info]
//APP版本号
#define kVersion [[[NSBundle mainBundle] infoDictionary] valueForKey:@"CFBundleShortVersionString"]
//系统版本号
#define kSystemVersion [[UIDevice currentDevice] systemVersion]

//加载图片
#define kIMAGE_Name(imageName) [UIImage imageNamed:[NSString stringWithFormat:@"%@",imageName]]
//弱引用
#define kWeakSelf(type)  __weak typeof(type) weak##type = type
//强引用
#define kStrongSelf(type)  __strong typeof(type) type = weak##type
//安全调用Block
#define kSafeBlock(blockName,...) ({!blockName ? nil : blockName(__VA_ARGS__);})
//加载xib
#define kLoadNib(nibName) [UINib nibWithNibName:nibName bundle:[NSBundle mainBundle]]
//字符串拼接
#define kStringFormat(format,...) [NSString stringWithFormat:format,##__VA_ARGS__]
//属性快速声明（建议使用代码块）
#define kPropertyString(name) @property(nonatomic,copy)NSString *name
#define kPropertyStrong(type,name) @property(nonatomic,strong)type *name
#define kPropertyAssign(name) @property(nonatomic,assign)NSInteger name
// View 圆角和加边框
#define kViewBorderRadius(View, Radius, Width, Color)\
\
[View.layer setCornerRadius:(Radius)];\
[View.layer setMasksToBounds:YES];\
[View.layer setBorderWidth:(Width)];\
[View.layer setBorderColor:[Color CGColor]]
// View 圆角
#define kViewRadius(View, Radius)\
\
[View.layer setCornerRadius:(Radius)];\
[View.layer setMasksToBounds:YES]
//永久存储对象
#define kSetUserDefaults(object, key)                                                                                                 \
({                                                                                                                                             \
NSUserDefaults * defaults = [NSUserDefaults standardUserDefaults];                                                                         \
[defaults setObject:object forKey:key];                                                                                                    \
[defaults synchronize];                                                                                                                    \
})
//获取对象
#define kGetUserDefaults(key) [[NSUserDefaults standardUserDefaults] objectForKey:key]
//删除某一个对象
#define kRemoveUserDefaults(key)                                         \
({                                                                          \
NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];       \
[defaults removeObjectForKey:_key];                                     \
[defaults synchronize];                                                 \
})
//清除 NSUserDefaults 保存的所有数据
#define kRemoveAllUserDefaults  [[NSUserDefaults standardUserDefaults] removePersistentDomainForName:[[NSBundle mainBundle] bundleIdentifier]]

//输出
#ifdef DEBUG
#define ASLog(...) NSLog(__VA_ARGS__)
#define debugMethod() NSLog(@"%s", __func__)
#else
#define ASLog(...)
#define debugMethod()
#endif

#define kiOS9Later (kSystemVersion >= 9)

//************************** 切换APP 语言 宏 ***********************
#define KLanguage(key)  [[NSBundle bundleWithPath:[[NSBundle mainBundle] pathForResource:[NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"appLanguage"]] ofType:@"lproj"]] localizedStringForKey:(key) value:nil table:@"Localizable"]

//是否是可用字符串
#define k_isValidString(_str) (_str && [_str isKindOfClass:[NSString class]] && ([_str length] > 0))
//是否是可用数组
#define k_isValidArray(_array) (_array && [_array isKindOfClass:[NSArray class]] && ([_array count] > 0))
//是否是可用字典
#define k_isValidDictionary(__dic) (__dic && [__dic isKindOfClass:[NSDictionary class]] && ([__dic count] > 0))
//字符串使用
#define k_safeString(_str) k_isValidString(_str)?_str:@""
///app名字
#define kAppName [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleDisplayName"]
///app版本
#define kAppVersion [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"]
///app构建版本
#define kAppBuilding [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleVersion"]
#endif /* PrefixHeader_pch */
